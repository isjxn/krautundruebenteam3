Querys hier.

[Task] Query. die Löschung seiner Daten verlangt.
UPDATE kunde
SET NACHNAME = "DSGVO",
VORNAME = "DSGVO",
GEBURTSDATUM = "1970-01-01",
STRASSE = "DSGVO",
HAUSNR = "0",
PLZ = "0",
ORT = "DSGVO",
TELEFON = "0000-000000",
EMAIL = "DSGVO"
WHERE KUNDENNR = 2609;

[Task] Query. Auswahl aller Rezepte, die eine bestimmte Kalorienmenge nicht überschreiten
SELECT rezept.Name, SUM(zutat.KALORIEN*rezeptzutat.menge)
FROM rezept
JOIN rezeptzutat
ON rezept.rzID = rezeptzutat.rzID
JOIN zutat
ON rezeptzutat.zutatID = zutat.zutatID
GROUP BY rezept.Name
HAVING SUM(zutat.KALORIEN*rezeptzutat.menge) < 800;


[Task] Query. Auswahl aller Zutaten eines Rezeptes nach Rezeptname:
Select R.Name,
       Z.BEZEICHNUNG
from rezept 	                R
JOIN rezeptzutat 		RZ ON R.RezeptID = RZ.rzID
JOIN zutat 		        Z  ON RZ.zutatID = Z.zutatID


[TASK]Query. Auswahl von Rezepten entsprechend vorgegebener Ernährungskategorien:
Select  R.Name,
	EK.Name
from rezept 					R
JOIN rezepternährungskategorie		    	REK ON REK.reID = R.RezeptID
JOIN ernährungskategorie			EK	ON REK.ErnährungskategorieID = EK.ErnährungskategorieID

[Task] Query. Auswahl aller Rezepte einer bestimmten Ernährungskategorie:
Select  R.Name,
	EK.Name
from rezept 				R
JOIN rezepternährungskategorie		REK ON REK.reID = R.RezeptID
JOIN ernährungskategorie		EK	ON REK.ErnährungskategorieID = EK.ErnährungskategorieID
Where EK.Name LIKE "Vegan"


[Task] Query. Berechnung der durchschnittlichen Nährwerte aller Bestellungen eines Kunden:
Select K.NACHNAME,
	   AVG(Z.KALORIEN) AS "Durchschnittliche Kalorien",
       	   AVG(Z.KOHLENHYDRATE) AS "Durchschnittliche Kohlenhydrate",
           AVG(Z.PROTEIN) AS "Durchschnittliche Protein"
from kunde			k
JOIN bestellung			b ON B.KUNDENNR = K.KUNDENNR
JOIN rezept			R ON R.RezeptID = B.RezeptID
JOIN rezeptzutat 		RZ ON R.RezeptID = RZ.rzID
JOIN zutat 		        Z  ON RZ.zutatID = Z.zutatID
Group by K.NACHNAME


[Task] Query. Auswahl aller Rezepte, die eine gewisse Zutat enthalten:
Select R.Name,
       Z.BEZEICHNUNG
from rezept 	                R
JOIN rezeptzutat 		RZ ON R.RezeptID = RZ.rzID
JOIN zutat 		        Z  ON RZ.zutatID = Z.zutatID
Where Z.BEZEICHNUNG LIKE "Tomate"


[Task] Query. Auswahl aller Zutaten, die bisher keinem Rezept zugeordnet sind:
SELECT zutat.BEZEICHNUNG, rezeptzutat.rzID
FROM zutat
LEFT JOIN rezeptzutat  ON rezeptzutat.zutatID = zutat.zutatID
WHERE rezeptzutat.rzID IS NULL


[Task] Query. Auswahl aller Rezepte, die weniger als fünf Zutaten enthalten: 
Select 
R.Name      
from rezept 	        R
JOIN rezeptzutat 	RZ ON R.RezeptID = RZ.rzID
JOIN zutat 		Z  ON RZ.zutatID = Z.zutatID
Group by R.Name
HAVING COUNT(Z.BEZEICHNUNG) < 5



[Task] Query. Auswahl aller Rezepte, die eine bestimmte Kalorienmenge nicht überschreiten: 
Select 
R.Name
from rezept					R 
JOIN rezeptzutat 		RZ ON R.RezeptID = RZ.rzID
JOIN zutat 		        Z  ON RZ.zutatID = Z.zutatID
Group by R.Name, Z.KALORIEN
Having Z.KALORIEN < 300

[Task] Query. Auswahl aller Rezepte, die weniger als fünf Zutaten enthalten und eine bestimmte Ernährungskategorie erfüllen: 

Select 
R.Name
from rezept 	       			R
JOIN rezepternährungskategorie	REK ON REK.reID = R.RezeptID
JOIN ernährungskategorie		EK	ON REK.ErnährungskategorieID = EK.ErnährungskategorieID
JOIN rezeptzutat 				RZ ON R.RezeptID = RZ.rzID
JOIN zutat 						Z  ON RZ.zutatID = Z.zutatID
Where EK.Name LIKE "Vegan"
Group by R.Name
HAVING COUNT(Z.BEZEICHNUNG) < 5


[Task] Query. dass ein Kunde Auskunft seiner Daten nach DSGVO beantragt oder:
Select *
From kunde


[Task] Query. Auswahl bzw. Ausschluss von Rezepten auf Basis von Beschränkungen:
Select R.Name,
       B.Name
From rezept 				R
JOIN rezeptbeschränkungen		RB ON R.RezeptID = RB.rbID
JOIN beschränkung			B  ON B.BeschränkungsID = RB.BeschränkungsID
Where B.Name LIKE "Laktose"

[Task] Mindestens 3 weitere Querys  überlegen
  1) Die gesamte Umsatz von allen Bestellungen pro Kunde:
	Select K.VORNAME,
       	       K.NACHNAME,
       	       SUM(b.RECHNUNGSBETRAG)
	from kunde k
	JOIN bestellung b ON b.KUNDENNR = k.KUNDENNR
	Group by K.VORNAME, K.NACHNAME
	
 2) Rezept pro Ernährungskategorie und beschränkungen:
 	Select R.Name, EK.Name, B.Name
	From rezept				R
	Inner join rezepternährungskategorie	RE ON R.reID = RE.reID
	JOIN ernährungskategorie		EK ON RE.ErnährungskategorieID = EK.ErnährungskategorieID
	Inner Join rezeptbeschränkungen		RB ON R.rbID = RB.rbID
	JOIN beschränkung			B  ON RB.BeschränkungsID = B.BeschränkungsID
	
3) Ausfall alle rezepten, die ein beschränkung haben:
	Select R.Name
	from rezeptbeschränkungen   RB 
	Right JOIN rezept 	    R ON R.rbID = RB.rbID 
	Where RB.rbID IS NOT NULL
	
	












